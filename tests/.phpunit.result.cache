C:37:"PHPUnit\Runner\DefaultTestResultCache":3721:{a:2:{s:7:"defects";a:30:{s:38:"Jac\Tests\Enums\EnumTest::testSetState";i:1;s:43:"Jac\Tests\Enums\EnumTest::testSetStateError";i:1;s:44:"Jac\Tests\Enums\EnumTest::testJsonWithFormat";i:1;s:36:"Jac\Tests\Enums\EnumTest::testEquals";i:1;s:36:"Jac\Tests\Enums\EnumTest::testSearch";i:1;s:54:"Jac\Tests\Enums\EnumTest::testInEmumWhenValidValueUsed";i:4;s:56:"Jac\Tests\Enums\EnumTest::testInEmumWhenInvalidValueUsed";i:1;s:52:"Jac\Tests\Enums\EnumTest::testInEmumWhenValidKeyUsed";i:1;s:37:"Jac\Tests\Enums\EnumTest::testToArray";i:1;s:41:"Jac\Tests\Enums\EnumTest::testEnumNotSame";i:1;s:45:"Jac\Tests\Enums\EnumTest::testValidStaticCall";i:1;s:38:"Jac\Tests\Enums\EnumTest::testToString";i:1;s:47:"Jac\Tests\Enums\EnumTest::testInvalidStaticCall";i:1;s:55:"Jac\Tests\Enums\EnumTest::testInvalidEnumCallValueError";i:1;s:53:"Jac\Tests\Enums\EnumTest::testInvalidEnumCallKeyError";i:1;s:61:"Jac\Tests\Enums\EnumTest::testInvalidEnumCallKeyAndValueError";i:1;s:43:"Jac\Tests\Enums\EnumTest::testValidEnumCall";i:1;s:34:"Jac\Tests\Enums\EnumTest::testKeys";i:1;s:36:"Jac\Tests\Enums\EnumTest::testValues";i:1;s:39:"Jac\Tests\Enums\EnumTest::testKeyExists";i:1;s:40:"Jac\Tests\Enums\EnumTest::testEqualValue";i:1;s:35:"Jac\Tests\Enums\EnumTest::testClone";i:1;s:39:"Jac\Tests\Enums\EnumTest::testConstruct";i:1;s:35:"Jac\Tests\Enums\EnumTest::testMagic";i:1;s:34:"Jac\Tests\Enums\EnumTest::testJson";i:1;s:34:"Jac\Tests\Enums\EnumTest::testFrom";i:3;s:44:"Jac\Tests\Enums\EnumTest::testFromWhenNoKeys";i:3;s:51:"Jac\Tests\Enums\EnumTest::testFromWhenAlldeprecated";i:3;s:44:"Jac\Tests\Enums\EnumTest::testFromWhenNoConf";i:3;s:51:"Jac\Tests\Enums\EnumTest::testFromWhenAllDeprecated";i:3;}s:5:"times";a:34:{s:54:"Jac\Tests\Enums\EnumTest::testInEmumWhenValidValueUsed";d:0;s:56:"Jac\Tests\Enums\EnumTest::testInEmumWhenInvalidValueUsed";d:0;s:52:"Jac\Tests\Enums\EnumTest::testInEmumWhenValidKeyUsed";d:0.001;s:37:"Jac\Tests\Enums\EnumTest::testToArray";d:0.001;s:41:"Jac\Tests\Enums\EnumTest::testEnumNotSame";d:0.003;s:45:"Jac\Tests\Enums\EnumTest::testValidStaticCall";d:0.001;s:38:"Jac\Tests\Enums\EnumTest::testToString";d:0;s:47:"Jac\Tests\Enums\EnumTest::testInvalidStaticCall";d:0.002;s:45:"Jac\Tests\Enums\EnumTest::testInvalidEnumCall";d:0.001;s:35:"Jac\Tests\Enums\EnumTest::testClone";d:0.001;s:39:"Jac\Tests\Enums\EnumTest::testConstruct";d:0.001;s:35:"Jac\Tests\Enums\EnumTest::testMagic";d:0.001;s:34:"Jac\Tests\Enums\EnumTest::testJson";d:0.001;s:44:"Jac\Tests\Enums\EnumTest::testJsonWithFormat";d:0.001;s:38:"Jac\Tests\Enums\EnumTest::testSetState";d:0.001;s:43:"Jac\Tests\Enums\EnumTest::testSetStateError";d:0.001;s:36:"Jac\Tests\Enums\EnumTest::testEquals";d:0.001;s:62:"Jac\Tests\Enums\EnumTest::testInvalidEnumCallKeyAndValueEquals";d:0.001;s:55:"Jac\Tests\Enums\EnumTest::testInvalidEnumCallValueError";d:0.001;s:53:"Jac\Tests\Enums\EnumTest::testInvalidEnumCallKeyError";d:0;s:61:"Jac\Tests\Enums\EnumTest::testInvalidEnumCallKeyAndValueError";d:0.001;s:43:"Jac\Tests\Enums\EnumTest::testValidEnumCall";d:0;s:34:"Jac\Tests\Enums\EnumTest::testKeys";d:0;s:36:"Jac\Tests\Enums\EnumTest::testValues";d:0;s:36:"Jac\Tests\Enums\EnumTest::testSearch";d:0.001;s:39:"Jac\Tests\Enums\EnumTest::testKeyExists";d:0;s:40:"Jac\Tests\Enums\EnumTest::testEqualValue";d:0.001;s:34:"Jac\Tests\Enums\EnumTest::testFrom";d:0.002;s:44:"Jac\Tests\Enums\EnumTest::testFromWhenNoKeys";d:0;s:51:"Jac\Tests\Enums\EnumTest::testFromWhenAlldeprecated";d:8.039;s:44:"Jac\Tests\Enums\EnumTest::testFromWhenNoConf";d:0.001;s:54:"Jac\Tests\Enums\EnumTest::testInEnumWhenValidValueUsed";d:0.006;s:56:"Jac\Tests\Enums\EnumTest::testInEnumWhenInvalidValueUsed";d:0.001;s:51:"Jac\Tests\Enums\EnumTest::testFromWhenAllDeprecated";d:0.001;}}}